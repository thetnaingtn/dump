name: Release
on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set the release version
        shell: bash
        run: echo "RELEASE_VERSION=${GITHUB_REF:11}" >> $GITHUB_ENV

      - name: Fetch all tags
        run: git fetch --force --tags

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21.x
      
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLISHER_TOKEN }}

      - name: Install Node
        uses: actions/setup-node@v4
        with: 
          node-version: "16"
          registry-url: "https://registry.npmjs.org"

      - name: Publish to NPM
        shell: bash
        run: |
          cd npm
          version="${{ env.RELEASE_VERSION }}"
          export version
          for target in "dump_darwin_amd64_v1" "dump_darwin_arm64" "dump_linux_amd64_v1" "dump_linux_arm64" "dump_windows_amd64_v1" "dump_windows_arm64"; do
            bin="dump"
            node_os=$(echo "${target}" | cut -d "_" -f2)
            export node_os
            node_arch=$(echo "${target}" | cut -d "_" -f3)
            export node_arch
            if [ "${node_os}" = "windows" ]; then
              export node_pkg="${bin}-windows-${node_arch}"
            else
              export node_pkg="${bin}-${node_os}-${node_arch}"
            fi
            echo "pkg:${node_pkg}"
            mkdir -p "${node_pkg}/bin"
            envsubst < package.json.tmpl > "${node_pkg}/package.json"
            if [ "${node_os}" = "windows" ]; then
              bin="${bin}.exe"
            fi
            install -D ../dist/${target}/${bin} ${node_pkg}/bin/${bin}
            cd "${node_pkg}"
            npm publish --access public
            cd ..
          done
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_API_KEY}}

  publish-npm:
    needs: goreleaser
    name: Publish base package to NPM
    runs-on: ubuntu-latest
    steps:  
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: "16"
          registry-url: "https://registry.npmjs.org"
      - name: Publish to NPM
        shell: bash
        run: |
          cd npm/dump
          yarn install
          yarn build
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_API_KEY }}
